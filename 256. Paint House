class Solution(object):
    def minCost(self, costs):
        """
        :type costs: List[List[int]]
        :rtype: int
        """
        '''
        动态规划, 假设当前将第i个房子涂层红色, 则代价为第i-1个房子涂层蓝色或者绿色的最小值, 加上涂成红色的值
         dp[i][0] = min(dp[i-1][1] + dp[i-1][2]) + costs[i][0]
         dp[i][1] = min(dp[i-1][0], dp[i-1][2]) + costs[i][1];
         dp[i][2] = min(dp[i-1][0], dp[i-1][1]) + costs[i][2];
        '''
        r, b, g = 0,0,0
        for rc, bc, gc in costs:
            # 同时赋值
            r, b, g = min(b, g) + rc, min(r,g) + bc , min(r, b) + gc
            

        return min(r,b,g)
