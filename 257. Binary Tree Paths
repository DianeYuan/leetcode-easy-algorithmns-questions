# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        def dfs(root,ls):
            if root.left is None and root.right is None:
                res.append(ls + str(root.val))
            if root.left:
                dfs(root.left, ls+ str(root.val) + '->')
            if root.right:
                dfs(root.right, ls+ str(root.val) + '->')   
                
        res = []
        if not root:
            return res
        
        dfs(root,'')
        return res
