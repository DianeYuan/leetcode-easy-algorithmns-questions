# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isSubtree(self, s, t):
        """
        :type s: TreeNode
        :type t: TreeNode
        :rtype: bool
        """
        def check(s, t):
            if s is None or t is None:
                return s is None and t is None
            if s.val != t.val:
                return False
            return check(s.left, t.left) and check(s.right, t.right)
        
        if s is None or t is None:
            return s is None and t is None
        if check(s, t):
            return True
        return self.isSubtree(s.left, t) or self.isSubtree(s.right, t)
